#!/bin/bash

if [ $# -ne 2 ]; then
	>&2 echo "Please specify a LLM CLI and an option."
	>&2 echo 'For example: `'$0' deepl-cli KO` or `'$0' gemini-cli "Translate to Korean"`'
	exit 1
fi

LT_CLI="$1"
LT_PARAM="$2"

GRAY='\033[1;37m'
RED='\033[31m'
NOCOLOR='\033[0m'

if [ -z "$LT_SLEEP_SEC" ]; then
	LT_SLEEP_SEC=4
fi

case $(basename "$LT_CLI") in
	deepl-cli)
		[ -z "$LT_LINES" ] && LT_LINES=100
		;;
	gemini-cli)
		[ -z "$LT_LINES" ] && LT_LINES=50
		;;
	claude-cli)
		[ -z "$LT_LINES" ] && LT_LINES=10
		;;
	*)
		>&2 echo "'$LT_CLI' is not a supported LLM."
		exit 1
esac

REAL_FIRST="yes"

function try_once {
	if [ "$REAL_FIRST" = "yes" ]; then
		REAL_FIRST="no"
	else 
		sleep $LT_SLEEP_SEC
	fi

	"$LT_CLI" "$LT_PARAM" < "$1"
	LAST_ERROR=$?

	if [ "$LT_VERBOSE" = "yes" ] && [ $LAST_ERROR -eq 0 ]; then
		>&2 echo -e "${GRAY}A part has been successfully translated.${NOCOLOR}"
	fi
}

function retry {
	>&2 echo "${GRAY}An error occurred, retrying in $LT_SLEEP_SEC seconds.${NOCOLOR}"
	try_once $1
}

TEMPFILE=$(mktemp)
split -l $LT_LINES - $TEMPFILE

rm $TEMPFILE
for i in $TEMPFILE*; do
	if ! [ -f "$i" ]; then
		>&2 echo "Empty input."
		exit 1
	fi
	try_once "$i"

	# Retrying twice
	[ $LAST_ERROR -ne 0 ] && retry $i
	[ $LAST_ERROR -ne 0 ] && retry $i

	# Give up this part
	[ $LAST_ERROR -ne 0 ] && >&2 echo -e "${RED}Failed to process a part of the input.${NOCOLOR}"
done

rm $TEMPFILE*
